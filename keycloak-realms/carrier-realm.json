{
  "id" : "carrier",
  "realm" : "carrier",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "bd11e167-a5af-4ca2-a9a7-528e1f7bcfea",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "carrier",
      "attributes" : { }
    }, {
      "id" : "bd433571-7c6e-4609-ba9b-ed5131c0bc80",
      "name" : "MAINTAINER",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "carrier",
      "attributes" : { }
    }, {
      "id" : "6b92c369-b47b-407a-b643-534526e2671f",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "carrier",
      "attributes" : { }
    }, {
      "id" : "d1e6066f-9a7b-490a-98b2-eab938f0798b",
      "name" : "default-roles-carrier",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "carrier",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "86ad072c-680c-4dbe-9b9a-dd61a764d632",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "aa827abe-5302-4161-835c-7be34fdb32c9",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "b599fa70-cbb1-43e1-adf8-4c607fd682cb",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "b657deee-5153-4966-a25d-37b1fe0a04a5",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "442b2c8c-fc1f-498f-b1b0-e6a87ae34fbb",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "c064560a-b464-41c4-bac1-17725a171b84",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "48dafe19-a672-43c4-a28d-47fd902e9d29",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "ad8f8c48-30ac-4056-a24f-5a0e9aff319c",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "4a4e6668-e25f-49af-8237-252d3bdf5adc",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "10989671-80f1-4694-8e2f-21e1b746fd13",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "ba2d0763-babc-4d21-8eb4-72c6003f1fc5",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "16e9a415-78e4-4511-84fd-3ad2ccdf6d90",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "f47dd88f-5fc5-4e97-8d3d-0ddbe74f7e81",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "c88c264c-5906-4f96-b322-4262e2099b68",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-realm", "query-groups", "manage-realm", "impersonation", "query-users", "manage-clients", "view-users", "manage-events", "create-client", "view-clients", "manage-identity-providers", "manage-authorization", "query-clients", "manage-users", "view-authorization", "query-realms", "view-identity-providers", "view-events" ]
          }
        },
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "21061b40-0b87-47c5-9061-9b60d3bc945f",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "5f57366b-f68a-47e6-9058-60e0903d7a21",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "cda9c11e-fa13-4d2e-b36d-5c9fd872b341",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "20cbce1c-38cf-4625-8147-6be67e677c53",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      }, {
        "id" : "96942be4-1009-4192-9471-3820a16039f8",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f393b892-3d17-4721-8fab-09fe92a134b0",
        "attributes" : { }
      } ],
      "web" : [ ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "1f4a23a9-58c5-439f-bea7-360574c1d0d0",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "db9bc051-0bcf-4f7c-8ba8-f7812e6c351a",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "622e4c21-f0be-452b-b3f0-b5828033e323",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05e28d0e-1d22-4e07-918a-ce7016c1cb4e",
        "attributes" : { }
      }, {
        "id" : "1f78810c-0106-44b8-8d78-facb27af6e10",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05e28d0e-1d22-4e07-918a-ce7016c1cb4e",
        "attributes" : { }
      }, {
        "id" : "e99083a3-62a3-4196-ace0-32edc70db9ee",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05e28d0e-1d22-4e07-918a-ce7016c1cb4e",
        "attributes" : { }
      }, {
        "id" : "1cab67f9-ed89-4953-84ac-51721e96699d",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "05e28d0e-1d22-4e07-918a-ce7016c1cb4e",
        "attributes" : { }
      }, {
        "id" : "837137c2-193b-4d3c-9956-013e3e902963",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "05e28d0e-1d22-4e07-918a-ce7016c1cb4e",
        "attributes" : { }
      }, {
        "id" : "7c24ee58-1d7a-4fab-a574-f2eae65ac0c2",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05e28d0e-1d22-4e07-918a-ce7016c1cb4e",
        "attributes" : { }
      }, {
        "id" : "b5f33fec-007c-4173-94d5-b3dbe187b764",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "05e28d0e-1d22-4e07-918a-ce7016c1cb4e",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "d1e6066f-9a7b-490a-98b2-eab938f0798b",
    "name" : "default-roles-carrier",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "carrier"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "05e28d0e-1d22-4e07-918a-ce7016c1cb4e",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/carrier/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/carrier/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "3a4426db-fb79-4662-80da-3835f5122c9a",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/carrier/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/carrier/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "21aba1a5-8c24-4c75-8e7e-87402143929d",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "ee5af8d4-8655-4792-ac1b-ee741a997728",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "db9bc051-0bcf-4f7c-8ba8-f7812e6c351a",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "f393b892-3d17-4721-8fab-09fe92a134b0",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a5efaa2b-dfa9-407c-999a-09293452f4f3",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/carrier/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/carrier/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "263dc134-2ad7-4ba4-ab58-1c3d7349aea1",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "d0cc4b63-3ea1-42fa-8aed-e60b52f01f69",
    "clientId" : "web",
    "rootUrl" : "http://localhost:8000/",
    "adminUrl" : "http://localhost:8000/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "Wi7C2J6xfYl1WMAt7xnAgenaQkQ2dVmH",
    "redirectUris" : [ "http://localhost:8000/*" ],
    "webOrigins" : [ "http://localhost:8000/" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "frontchannel.logout.session.required" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "saml.allow.ecp.flow" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "client.secret.creation.time" : "1669962164",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "acr.loa.map" : "{}",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "809788a1-a948-4c77-b728-dba099279ef6",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "c79231f2-cfbd-406f-97d2-3b8418d931b2",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "006fbab1-65cb-4dbf-89a3-c6ca0772bbdc",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "39126145-5f9c-4d7c-8341-ef14545ba198",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "8d74d32d-b267-40a3-ad38-ceda8660488e",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "1e41df0b-ced0-4313-9cc5-3a6007c2dfcd",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "55971c8f-f121-44f2-89a7-469dce9cad44",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9021a667-62e4-4a03-8145-da68ed838f83",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d504b462-20cf-477d-a5a9-04eda2805d00",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "61e07729-f0da-4e8b-89ee-5416530944cb",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "87d184b4-c91a-4fa9-8532-ad06a5fff692",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f065ffc1-f54d-47ee-8565-ae847444c5ba",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "61573784-c101-41a4-aeb8-74c049a1dd90",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e7e6b2cc-af56-4564-8e9f-c379c9594641",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "8eb0655e-6312-4006-946c-6f5969d2bef4",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b7d05494-a1b1-4f2a-bb30-f47ea60c0898",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b15d192b-10e5-4bb1-a6cb-03fe0819bb0d",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e21c401d-f015-46b6-87d3-266e8b179bf0",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1399eb1c-4372-45e0-bde0-59f52266d4f4",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d2d10aa0-df83-42ef-881c-f1ecb602202c",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "6df5c91b-9507-41f9-8bd0-8144084e1ed4",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "3fa7a9fa-1e1a-4d15-b2ff-aa975d9a0dd8",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "d0affd9f-3147-411a-b0e3-7fa51ec09c77",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "f0d781b6-5960-44ed-b50c-3f11af7172d3",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "0ecc1c7b-5d1c-4749-a5f4-415540e02b38",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "74b4e418-3e83-458d-a867-f1f9d3ef6524",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "ed8fb7c9-ba9c-46bf-8648-ddc43537bcfa",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "038c799e-aeb4-4a85-b33d-7c5b8a222e40",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "f75fd50c-3c18-4e64-a111-ff8ef2f2f256",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cc9d113b-f276-417a-92a9-c485be0516c0",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "8e28c219-bd57-4a70-9caf-740d5f0fe588",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "456ba538-430c-4b6e-8c6f-a620f0c1ccaf",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "188699c0-fe4e-4663-89aa-6b555760d319",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "9829e75a-db32-427c-8eca-e6d63ddedb23",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "5952c36e-4b7f-424b-b1b9-5cbfd7213fdc",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "7768dc37-6c57-4c84-8194-5788e6ec21d4",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "6de1d117-691b-4b07-a8bb-c31d931a2b99",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "110b843a-6984-44bc-9730-89fc4884005a",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "db86d5af-9c8a-4be4-8b56-347cc5747654",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "e623c585-ab37-4891-9aa2-2a290b5b6a61",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "be9d470d-a1d6-4cd7-9fd1-d44d18920aa1",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "386a822f-363c-4c37-893f-010b687d1706",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper" ]
      }
    }, {
      "id" : "5673ab7d-81d2-4a91-b567-7658def133ca",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "303a9746-18d1-4846-82fc-b3a4cba994dd",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "e017d140-d20a-43ad-bb24-a81b253becc3",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "saml-user-property-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "a9d4ddd6-ba7e-4ca5-8a83-31248a0575ce",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpQIBAAKCAQEAvhCvDyjff+BXd7DLKn1vkU6z6KeKLo+A83vm1dEMOyTWycoayWhRosOHQcgo9RDoW6n5qABx7dbVntPsQLOCUv0zn/rLt7ChdGpGlPl2GoMP/EvgLrJqH+IBjydeBkRje6yaBqk3uJZ9BEVABYXtSdtdJ1lJjS+zLseWqf3detgF+WH2G99W5udNGuervun1VpfgilwzWTaqY3WkHErOP1d7TBhlQ+DhJiysqfIaqsKkg+AAqJIQQA2r75lWrrAaJw7W0U8mBxfiLwpGmylfJ75yh7mxwvNSiShGiF4suXbmuAGkt4yJ70FflMcoYG6P9R0bTTqtyCj3LG/UPcq1KQIDAQABAoIBAQC3qWWQj52Rc1bySPu5/mYuEtBU1Hj5zx/7qNIB8bUQ/eM0MUE7OLwSPUFZdrLlRUZTNWgTSQLOopfgl8anKw+XZCdbwzzSLzOFTCESWhEfQ2DSGvvyA+P7FSkOjSsVgUZkvwBDyYcXrwv1cXmRHL6UbQ6SNHyXmu1aGfHkKHW5+pVQidUUqWhBU+yRo49AbF70Z6QFe9MXmtIwsDyJfOoSwMtACyC+rLudfgeP+Sq9lGAFgYu1kYPQQZSV2PmeAQ6QPyoF1fQiNj2TLDI5se6lOju1wPkm2D3GlaFDBeqQ16HN/uejHX69ULWZeOAnSkYGTY+sGLDrvpd8T2/kRt6FAoGBAN5t3CwZSV6wYCYBegkH0Ja2QZc1I09IhDfWEMnt9g1lhktrmwziLGqLu1Uk6UxOg1VviLuW35kyiH24j33dWnCDOpBz+22KnoJJSF4M6fl69e0aATWNXHU3oHiDls9WQlVI/iCTq9ql5W+aTTp/FLT+KTRM4jeMzBy9glWa38GLAoGBANrAWx+Qq2YJmaWk0TEbswf6kI03U00tc2xsCNSgu5GsbggLP5g8ZVcwZG0eO9J12OSJ9r2rSVl1n0Ix25/dW6ShVg3v3AODHT7bgLtC3mQIeBLyyf9GthTSMqcRU1qo7nyb2l7Iz3PfVW7+TXC2F3x5xyxqGtwjeWVE8aALNlKbAoGBAKzyBMhxHOA4CXpjmYyd++zDZ3p3ga3qt4tmsYUgtjkyYFoSH+vDjD+HyC/q1E9VmL58S3d4VwEaDpCaSU/XJbPoBUg+Nhe1OYwaCN+/8Mjfd4pUtu35rRMjHm21+zPZYRhI+fdAetY2OZAuDLBYETStjkIxKY+BtU7/dvCyzBoDAoGAPnljTO+HU/v36qvYptrPVb8E25/qZYdOiK+OEhPZnfAN+LQltHfDRZRnihZxZVkM2bBhTKgHqcoC8ufEXrLcgnclWZOgVUxz5MjRyil91Dnq+RZoBEUQqX+iwb4b/S9z9RiZ1CorvV8SSkHMoh0PNhidfpzLEQX8nKSFEX1CRXMCgYEApnx8FQN2CJ8PWcz6s1AJQmX3d3p1/cPL/WJPzggTbT+j6fp4khyAp4+TiC7tE1Gck6MiHE+vafeDj7qcAuHanC/pN4G99GFOYeaaLRG4OXkW57X5CCwLBuVVuLY8L1EfLvmhZVH/Au0ED4d6AztGNo/s0mfqcgCGCSrq8LyGQ1E=" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICnTCCAYUCBgGE0X1qfjANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdjYXJyaWVyMB4XDTIyMTIwMjA2MTc0OFoXDTMyMTIwMjA2MTkyOFowEjEQMA4GA1UEAwwHY2FycmllcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL4Qrw8o33/gV3ewyyp9b5FOs+inii6PgPN75tXRDDsk1snKGsloUaLDh0HIKPUQ6Fup+agAce3W1Z7T7ECzglL9M5/6y7ewoXRqRpT5dhqDD/xL4C6yah/iAY8nXgZEY3usmgapN7iWfQRFQAWF7UnbXSdZSY0vsy7Hlqn93XrYBflh9hvfVubnTRrnq77p9VaX4IpcM1k2qmN1pBxKzj9Xe0wYZUPg4SYsrKnyGqrCpIPgAKiSEEANq++ZVq6wGicO1tFPJgcX4i8KRpspXye+coe5scLzUokoRoheLLl25rgBpLeMie9BX5THKGBuj/UdG006rcgo9yxv1D3KtSkCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAB3Vt9gKZt34ELAtQn4iKqUWHfd6ox5638bb7Pn4gU2QmUayDXlUsholPWIbFdIIKJppYdeuH6zQhQRSDARUW+GX8FyhIfbOboVu5c/TgnoKeaKOZupspAiV56jS7D4Wz0ZdJZMr+WT0g6wBXNsn27JnnILlUX19oFTvh8Suqbk5jsc+XupX21O+mMSSYIbNfu2NyZdSOjSbV2ZLDpYfR7IeSRooYyfLUiN5+ZV+J3bkXA/HpGRsO5hPouq9ENFay7BZvY/aGUoTS6nZ9bQHv255kehBQTKDcydeXOgMGqooJbUqA/EVjgrGPZpBBgfDR3gLGcAs09ktZro0UMrb3hg==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "558a95e1-372b-41ba-af20-dabf1a3f03df",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAjOOAHJZCWCaEm1Iw5uva1+QKtRWGMfe/UsqulEs8hF1ueDipfMYa2N+9wQPaeOTUjY+eMaJrWuvp8p0VWAM4t1syAtXjkgl7hcDBI9aV9S/SK0cLmhVNXWuVaMIHrYZGZpjPd4TghqGpazfObPQHk1nFLUahMl0OrwkW0hXFPmzvMRv8tcY6h4n9wzaoB8ouYNZIAK4da35nuqtXQ3D1SniWtnbNWyDpjmssTRpuWUXHLMIPFa36QQM1YuYclER9a1vXCpJvYUOhPNwZp/jFZkKxNiH47jmsc92aoxA9BjnoMJf1GaaXEHnAl0ce7WTj9mkSQgN43nXmWFrvCOwQCwIDAQABAoIBABT0sdWOtAeQkyDXNNbkNgTusnkE3pUIGLkj1JvSJQo7K3dOVkds4AlqHjtba1+YCdWUix8u3XEEriOcIdSZhhIfymyJi/Po3Sqj5RaDkIKLvmMZiiw9BujiW7LdSW8SDd6s1A8fAJaF7UE5Z8bk9UuBisaVPtzS4qA+ZdqRymjiahXfD0P+i6ptBzgHWceWUyv84e+X0YQTw72jC6JaqwyU/2PbuDJGGVZgbkCKq/bPZnUwHeswbZoZ2/LponNtCd20GR1gsyENAguVOj+CdII3Tdw6348E3ChJEV5P1XOFY/Lqzv4FBwSFxZFDpAXnIEFF21ngkv2qVadpu+byNOECgYEA2kwMAWSnbK0NN8VBkhytsnkouE91mtr36acFgKSs2eJ5Ec9bmfuskOs97xYrzDMgijvv0/BYk/n0i7Yt3AICW1XowQaf3HDV/Fbo1E+knffsthQFhb+gX+QjDPZ3WCj0pR9qpQfthkQ7LrvOikzZ0vE0+Xym1AutmbekPveulV8CgYEApTjcKeCsGfy27SWZBExh2QVnp4aGh+y5IUiEtxG7dNIzGRoT2I9LtAQWvhT6R8T+VljAFNJjxSx+ltnZM4SCtAcBqoNtXF+rb4TM/FFgjJLlrvx8J0nLiINn8WFaFP4uRUPXpi+pLR6vi69RyMuHpfd97bVljNBU3s69iKgjONUCgYBER7MdoHEp8fsHbcCzxhqij3koJVqAxGr0/5QeB+Q1Bryd0IEzaeAxOBOYPBQY/Aj6lALRBQV/y5gtNx+jCFHaZcW20q6gEf8svbZ36i1wZ8L3tM2BZ03vkHlSLalovu6+01PVKOSnsaHdXUseQSmE7IOIYfAAtWJoiWNreqd1+wKBgQCRHocqdT9UuAaH9z0WbGyJLNklaOBjJQZaeJKxJW8MJdBh3OjPjtVEcU70eAJ45Usr1looL78YIYOyxfej62DN9VV+Sl/VAebXVcKiYGu4LRJ2hygZbhTKe/jhJ8vyomtLxVH1kuk6SziPLVddUX98xAwkrO5cJ2RUKyyIin4dXQKBgFMcEPC/q6pn0q3j9h5+iq/h2c8QTTyyPnPYukxwtv4w0p+ixAgKsxmDlRgjI8p8FuTsftH5SVis8STqP8lBsvLrGbb/w14YEMLTJnRED6TvZJyrlva4f77YlzVnXXFIg8rVbkH1SJeVGDKTUhg8kzMw2R9WVmqbY/o5B2PjXzdi" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICnTCCAYUCBgGE0X1qLDANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdjYXJyaWVyMB4XDTIyMTIwMjA2MTc0OFoXDTMyMTIwMjA2MTkyOFowEjEQMA4GA1UEAwwHY2FycmllcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIzjgByWQlgmhJtSMObr2tfkCrUVhjH3v1LKrpRLPIRdbng4qXzGGtjfvcED2njk1I2PnjGia1rr6fKdFVgDOLdbMgLV45IJe4XAwSPWlfUv0itHC5oVTV1rlWjCB62GRmaYz3eE4IahqWs3zmz0B5NZxS1GoTJdDq8JFtIVxT5s7zEb/LXGOoeJ/cM2qAfKLmDWSACuHWt+Z7qrV0Nw9Up4lrZ2zVsg6Y5rLE0abllFxyzCDxWt+kEDNWLmHJREfWtb1wqSb2FDoTzcGaf4xWZCsTYh+O45rHPdmqMQPQY56DCX9RmmlxB5wJdHHu1k4/ZpEkIDeN515lha7wjsEAsCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAi87M/MESnZ6tnfcbxEhJYWANZ7+odUbKf8HG3tPQdK2EvUCvV+RFz3EvkzYY4AzM2mUGDvN0Sx3hMf/mxe+dgw1QumipCYoFQ4VfdORF1mn3YtkTszv2RgNzkjtOKwZu38JomoTTN/xARnTT2zWKthmRkUmG1Ewm8xHfcWbrgcC1rSzRdIrVizIl6sepxc7ZsdZLY/ITPqtYk5hwK+7DHuexwda0FzkkoBKALqTBKYN/IpG2u6+DuIIBmvDSPHm4IVHTOIwmMAxQBKb8ZoCG1SikfqWkPxK4dx4T32lhI3RxS8mVtzue/t/3jfWOma4c45szYxuYZ1tpPb9R/QNEaQ==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "bea6cba2-58cb-4b01-b116-34b93b810cca",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "f5ee3149-f7f9-49c3-93fd-bbcf8e526226" ],
        "secret" : [ "6dSdpOMoqG1f3ZMWCL6xrV5BGMOVIrSLRBRMFqf8skwjlKFSLFNhFsO_cmHoVn4scOUwqY9iOwTI6IqTf7lW9Q" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "f69b9359-c2fa-43ac-af5d-d6d309781fda",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "7c8752fd-de48-4046-a6d9-9bbaa6fb1018" ],
        "secret" : [ "5T7CrepvYNuDytVWflEg1w" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "003d5fd7-9da1-4217-96db-a64bb6ea7def",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9da78283-8b00-477d-93bc-77bd7c30fea3",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f7524ebb-e7da-4218-8489-2c0154a88c8c",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fd328fb4-0aac-4773-a0d5-43e4d25cd800",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "601882b7-a9b3-4680-93af-ec15a3d3d613",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "505b1262-e909-4831-9b15-d7bdfd02595b",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bdae0d49-7fff-4dab-9808-aa5c9fb44bc6",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6aba7743-8eaf-444b-9001-7af6509d93ab",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "513cd2c9-9962-4246-a7f2-809a78e7d4dc",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "51b4e337-b108-4f30-95c4-d3c2d4e66cf5",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ae82e84b-be85-4cdc-ba92-fecf5e72eff6",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a7bd98ae-a764-40a2-b8e6-5bf80447ef6c",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "89a87ba3-a1ca-4b9a-b70e-d2e6882dfa6b",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6e6bb7f5-4eb6-4b9d-bdb4-77913ae094a8",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2bd65367-a6b8-478d-9534-1abffc79d709",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "732442ca-1625-49b6-ac9c-e45da27e0cd3",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cd152616-8f53-4c50-8c80-3fe5c685398c",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "644570f1-853d-41b9-93aa-db7ec8842179",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fdd2a58f-1625-4bc2-8402-044fc28d3437",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "07bf1de8-7c76-47e3-9c97-292dd0b170c5",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "0db155d8-a5db-4ab7-8ff4-99edfc0d1ec0",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "f83184f0-ed49-4a8a-acb0-6d38e0631049",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "18.0.0",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}